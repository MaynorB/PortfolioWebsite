[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "E155 Blog",
    "section": "",
    "text": "Inital Reflection\n\n\nI don’t got one\n\n\n\n\n\nAug 29, 2024\n\n\nMaynor Bac Itzep\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "E155 Portfolio",
    "section": "",
    "text": "Maynor is a computer scientist at Harvey Mudd who does not like sitting down all day coding, he prefers making a sonic sensor detect if he is in front of it or not. When not sobbing in the corner because of his classes he chose, he enjoys gaming, skating around and failing the tricks, gymming, listening to music, buying more Jordans, looking at cars and laying down in the randomest places you can think of."
  },
  {
    "objectID": "labs/lab2/lab2.html#introduction",
    "href": "labs/lab2/lab2.html#introduction",
    "title": "Block Diagram",
    "section": "Introduction",
    "text": "Introduction\nIn this lab, we were to use time multiplexing to use the I/O on our FPGA to display two independent hexadecimal numbers on a duel seven-segment display. We had to use eight inputs to provide data and use five LEDs to display the sum of the values present on the seven segement display"
  },
  {
    "objectID": "labs/lab2/lab2.html#design-and-testing-methodology",
    "href": "labs/lab2/lab2.html#design-and-testing-methodology",
    "title": "Block Diagram",
    "section": "Design and Testing Methodology",
    "text": "Design and Testing Methodology\nUsing the on boar high speed oscilator, I decided to keep track of cycles. Ideally I slow it down to 500 to 1000 HZ range as that is what the human eye can see without noticing flickering…\nI decided to use seven resistors and wire each segemnt together on the same line for both 7 segment LED displays. This means that to power the corresponding segemnts on the displays, they’re joined together with a wire to minimize the amount of resistors used."
  },
  {
    "objectID": "labs/lab2/lab2.html#technical-documentation",
    "href": "labs/lab2/lab2.html#technical-documentation",
    "title": "Block Diagram",
    "section": "Technical Documentation:",
    "text": "Technical Documentation:\nThe source code can be found here: The source code for the FPGA is found in the associated. github repository"
  },
  {
    "objectID": "labs/lab2/lab2.html#results-and-discussion",
    "href": "labs/lab2/lab2.html#results-and-discussion",
    "title": "Block Diagram",
    "section": "Results and Discussion",
    "text": "Results and Discussion"
  },
  {
    "objectID": "labs/lab2/lab2.html#ai-prototype-summary",
    "href": "labs/lab2/lab2.html#ai-prototype-summary",
    "title": "Block Diagram",
    "section": "AI Prototype Summary",
    "text": "AI Prototype Summary"
  },
  {
    "objectID": "labs/lab1/lab1.html#introduction",
    "href": "labs/lab1/lab1.html#introduction",
    "title": "Block Diagram",
    "section": "Introduction",
    "text": "Introduction\nIn this lab, we were supposed to solder our components onto our boards. Once done, we then proceeded to code the FPGA blink three LEDS based on input recieved as well as a seven segment LED. The three LEDs has seperate conditions to be powered on: For the first LED, a XOR gate was used based on input of two switches For the second LED, an AND gate was used based on input of two switches For the third LED, it had to blink at a rate of 2.4 Hz\nFor the seven segement LED, it had to displace the hexadecimals 0x0 to 0xF while being able to tell the difference (EX, 8 and B are clearly different)"
  },
  {
    "objectID": "labs/lab1/lab1.html#design-and-testing-methodology",
    "href": "labs/lab1/lab1.html#design-and-testing-methodology",
    "title": "Block Diagram",
    "section": "Design and Testing Methodology",
    "text": "Design and Testing Methodology\nTo start, I began with the osciliator. It typically genertaes a clock signla at 24Mhz. A counter was utilized to divide the high frequency into one lower that would allow the led to blink at 2.4 Hz. It used a simple clock divider within the top module.\nThe next two LEDS were reletivly simple. I used gates for their respective inputs. I then assigned the result to the LED so it would flash when the conditions were met.\nAs for the segemnt, this was took a bit to design. I decided to utilize combinational logic and a case block to track the total inputs being provided. I have 15 different cases to track 0x1 to 0xF. With this, I decided to set 0x0 as default as no input would be provided. ## Technical Documentation:\nThe source code for the FPGA is found in the associated. github repository"
  },
  {
    "objectID": "posts/first-post.html",
    "href": "posts/first-post.html",
    "title": "Inital Reflection",
    "section": "",
    "text": "I spent a long time getting this site ready. Mainly the publishing part, I wish it did not take so long but whatever at this point. I am hoping to learn more about Microprocessors in this course as well as embedded systems but the first lab is already a struggle since I can not solder ._."
  }
]