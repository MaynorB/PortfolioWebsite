[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "E155 Blog",
    "section": "",
    "text": "Inital Reflection\n\n\nI don’t got one\n\n\n\n\n\nAug 29, 2024\n\n\nMaynor Bac Itzep\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "E155 Portfolio",
    "section": "",
    "text": "Maynor is a computer scientist at Harvey Mudd who does not like sitting down all day coding, he prefers making a sonic sensor detect if he is in front of it or not. When not sobbing in the corner because of his classes he chose, he enjoys gaming, skating around and failing the tricks, gymming, listening to music, buying more Jordans, looking at cars and laying down in the randomest places you can think of."
  },
  {
    "objectID": "labs/lab2/lab2.html#introduction",
    "href": "labs/lab2/lab2.html#introduction",
    "title": "Technical Documentation:",
    "section": "Introduction",
    "text": "Introduction\nIn this lab, we were to use time multiplexing to use the I/O on our FPGA to display two independent hexadecimal numbers on a duel seven-segment display. We had to use eight inputs to provide data and use five LEDs to display the sum of the values present on the seven segement display \nHere is the pin assignment."
  },
  {
    "objectID": "labs/lab2/lab2.html#design-and-testing-methodology",
    "href": "labs/lab2/lab2.html#design-and-testing-methodology",
    "title": "Technical Documentation:",
    "section": "Design and Testing Methodology",
    "text": "Design and Testing Methodology\nUsing the on boar high speed oscilator, I decided to keep track of cycles. Ideally I slow it down to 500 to 1000 HZ range as that is what the human eye can see without noticing flickering. I decided to go above 1000 Hz just in case. Utilizing the equation f_out = f_in / 2 ^ n, n being the number of bits, I deduced to using 14 bits, as it would yield a frequency of about 1.4kHz.\nI decided to use seven resistors and wire each segemnt together on the same line for both 7 segment LED displays. This means that to power the corresponding segemnts on the displays, they’re joined together with a wire to minimize the amount of resistors used. Finally, linking to output GPIOs, each segment display recieved its own wire that would power the display through the transitor to help limit current."
  },
  {
    "objectID": "labs/lab2/lab2.html#block-diagram",
    "href": "labs/lab2/lab2.html#block-diagram",
    "title": "Technical Documentation:",
    "section": "Block Diagram",
    "text": "Block Diagram\nThe block diagram shows the overall structure of the design. There is three submodules present, the sevenSegment logic to display the correct value, the high speed oscillator block and the counter logic block.\n\n\n\nFigure 2"
  },
  {
    "objectID": "labs/lab2/lab2.html#schematic",
    "href": "labs/lab2/lab2.html#schematic",
    "title": "Technical Documentation:",
    "section": "Schematic",
    "text": "Schematic\nThe schematic shows the physical layout of the circut/design. The output LEDs are connected to a 160 Ohm resistor to bring down the output current of the pins. Two wires that helped power the displays were linked up to a transistors to help prevent the current exceeding the maximum output of the pins, attached to a 330 Ohm resistor to ensure when powered off, the current flows through the resistor. Finally, the segment LED themsevlevs were hooked to 160 Ohm resistors to prevent leakage and maintain stable brightness.\n\n\n\nFigure 3"
  },
  {
    "objectID": "labs/lab2/lab2.html#results-and-discussion",
    "href": "labs/lab2/lab2.html#results-and-discussion",
    "title": "Technical Documentation:",
    "section": "Results and Discussion",
    "text": "Results and Discussion\nStarting off with the testbench, we can see the simulations ran pretty well. We can see no error wave pop up throughout the simulations. The specific vectorsd that were tested measured if the segment displayed the correct values for both sets of inputs while the LEDs correctly lit up the sum represented in bit form."
  },
  {
    "objectID": "labs/lab2/lab2.html#ai-prototype-summary",
    "href": "labs/lab2/lab2.html#ai-prototype-summary",
    "title": "Technical Documentation:",
    "section": "AI Prototype Summary",
    "text": "AI Prototype Summary\nFor both outputs, the quality was not bad. HOwever, it did seem it overcomplicated the code, crafting an osc and utilizing wires for logic. I was surpised to see wires be used rather than just logic. I was surprisesd to see it compiled for the first prompt, and not utilize the oscilliator for the second prompt. My main issues with both codes is how it set two sets of seven outputs for each individual segemnt display when just one would have been enough.\n\n\n\nFigure 5\n\n\nFor the second one, it did attempt to make its own oscilliator, but recommended to replace the ports with our own.  Honestly, it’s a really messy start to just prompt it like this. I think simply asking clarifying questions to help aid in the lab would suffice."
  },
  {
    "objectID": "labs/lab1/lab1.html#introduction",
    "href": "labs/lab1/lab1.html#introduction",
    "title": "E155 Portfolio",
    "section": "Introduction",
    "text": "Introduction\nIn this lab, we were supposed to solder our components onto our boards. Once done, we then proceeded to code the FPGA blink three LEDS based on input recieved as well as a seven segment LED. The three LEDs has seperate conditions to be powered on: For the first LED, a XOR gate was used based on input of two switches For the second LED, an AND gate was used based on input of two switches For the third LED, it had to blink at a rate of 2.4 Hz\nFor the seven segement LED, it had to displace the hexadecimals 0x0 to 0xF while being able to tell the difference (EX, 8 and B are clearly different)"
  },
  {
    "objectID": "labs/lab1/lab1.html#design-and-testing-methodology",
    "href": "labs/lab1/lab1.html#design-and-testing-methodology",
    "title": "E155 Portfolio",
    "section": "Design and Testing Methodology",
    "text": "Design and Testing Methodology\nTo start, I began with the osciliator. It typically genertaes a clock signla at 24Mhz. A counter was utilized to divide the high frequency into one lower that would allow the led to blink at 2.4 Hz. It used a simple clock divider within the top module.\nThe next two LEDS were reletivly simple. I used gates for their respective inputs. I then assigned the result to the LED so it would flash when the conditions were met.\nAs for the segemnt, this was took a bit to design. I decided to utilize combinational logic and a case block to track the total inputs being provided. I have 15 different cases to track 0x1 to 0xF. With this, I decided to set 0x0 as default as no input would be provided."
  },
  {
    "objectID": "labs/lab1/lab1.html#technical-documentation",
    "href": "labs/lab1/lab1.html#technical-documentation",
    "title": "E155 Portfolio",
    "section": "Technical Documentation:",
    "text": "Technical Documentation:\nThe source code for the FPGA is found in the associated. github repository"
  },
  {
    "objectID": "labs/lab1/lab1.html#block-diagram",
    "href": "labs/lab1/lab1.html#block-diagram",
    "title": "E155 Portfolio",
    "section": "Block Diagram",
    "text": "Block Diagram\n The block diagram i figure 1 demostrates the overall architecture of this design. The top-level module lab_MBI has three submodules, the high speed oscillator clock, the clock divider and the sevenSegment module."
  },
  {
    "objectID": "labs/lab1/lab1.html#schematic",
    "href": "labs/lab1/lab1.html#schematic",
    "title": "E155 Portfolio",
    "section": "Schematic",
    "text": "Schematic\n Figure 2 shows the schemqtic for the circut, highlighting the resistors values used for the LEDS."
  },
  {
    "objectID": "labs/lab1/lab1.html#results-and-discussion",
    "href": "labs/lab1/lab1.html#results-and-discussion",
    "title": "E155 Portfolio",
    "section": "Results and Discussion",
    "text": "Results and Discussion\nThe results was that it worked great. The seven segement LED was able to display 0x0 to 0xF.The LEDs were flashing correctly, with two being based on XOR and AND gates, the third being timed with 2.4Hz. However, I did not write out a test bench, ideally I would have written one to make sure all cases would work"
  },
  {
    "objectID": "labs/lab1/lab1.html#results-and-discussion-1",
    "href": "labs/lab1/lab1.html#results-and-discussion-1",
    "title": "E155 Portfolio",
    "section": "Results and Discussion",
    "text": "Results and Discussion\nThe LEDs were blinking successfully and the seven segement display properly displayed the values. I spend about 16 hrs on this lab"
  },
  {
    "objectID": "labs/lab1/lab1.html#ai-prototype-summary",
    "href": "labs/lab1/lab1.html#ai-prototype-summary",
    "title": "E155 Portfolio",
    "section": "AI Prototype Summary",
    "text": "AI Prototype Summary"
  },
  {
    "objectID": "posts/first-post.html",
    "href": "posts/first-post.html",
    "title": "Inital Reflection",
    "section": "",
    "text": "I spent a long time getting this site ready. Mainly the publishing part, I wish it did not take so long but whatever at this point. I am hoping to learn more about Microprocessors in this course as well as embedded systems but the first lab is already a struggle since I can not solder ._."
  }
]